<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>7</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>385</x>
      <y>0</y>
      <w>203</w>
      <h>154</h>
    </coordinates>
    <panel_attributes>Intnode
--
-nodeData : int
-nodePointer : Intnode *

--
+ getNodeData() : int
+ getNodePointer() : IntNode*
+ setNodeData(int) : void
+ setnodePointer(IntNode*) : void

+ IntNode() : constructor
+ IntNode(int) : constructor
+ Intnode(int, IntNode*) : constructor

bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>154</x>
      <y>0</y>
      <w>189</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>IntNodeArray
-
- head : IntNode*
- size : int
-
+ IntNodeArray(int) : constructor
+ getSize() : int
+ getFromIndex(int) : int
+ setAtIndex(int, int value) : void
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>161</x>
      <y>182</y>
      <w>168</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>Node&lt;Type&gt;
-


-</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>336</x>
      <y>70</y>
      <w>63</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>392</x>
      <y>175</y>
      <w>336</w>
      <h>196</h>
    </coordinates>
    <panel_attributes>Array&lt;Type&gt;
--
- front : Node&lt;Type&gt; *
- size : int

--
+Array() : default constructor
+ Array&lt;Type&gt;(int size) : constructor

+~Array&lt;Type&gt;() : deconstructor
+Array&lt;Type&gt;(const Array&lt;Type&gt; &amp; toBeCopied) : copy constructor

+ getSize() : int
+ getFront() const : Node&lt;Type&gt;*

+ getFromIndex(int index) : Type
+ setAtIndex(int index, Type value) : void
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>322</x>
      <y>196</y>
      <w>84</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m2=1..n
bg=black</panel_attributes>
    <additional_attributes>100.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>392</x>
      <y>406</y>
      <w>322</w>
      <h>217</h>
    </coordinates>
    <panel_attributes>Model :: List&lt;Type&gt;
--
- size : int
- front : Node&lt;Type&gt;*

--
+List&lt;Type&gt;() : constructor
+List&lt;Type&gt;(sonst List&lt;Type&gt; &amp; source) : copy constructor
+ ~List&lt;Type&gt;() : deconstructor

+ addAtIndex(int index, Type value) : void
+ add(Type value : void
+ remove(int index) : Type
+ setAtIndex(int index, Type data) : Type
+ getFromIndex(int index) : Type
+ contains(Type data) : bool
+ getSize() const : int
+ getFront() const : node&lt;Type&gt; *
+ getEnd() const : Node&lt;Type&gt; *
bg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>273</x>
      <y>301</y>
      <w>266</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m2=0..n
bg=black</panel_attributes>
    <additional_attributes>360.0;150.0;360.0;110.0;10.0;110.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
